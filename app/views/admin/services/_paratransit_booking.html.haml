=content_for :header do
  Booking

=simple_form_for @service,
  url: admin_service_path, remote: true, authenticity_token: true, data: {type: 'html'},
  html: {class: 'form-horizontal', id: form_id_from_path, multipart: true, method: :put } do |f|
  =remote_form_input # This sends the partial_path to the controller, so it can serve back the correct partial

  =f.input :booking_api, 
      input_html: {class: 'booking-api'}, 
      collection: Booking::BOOKING_TYPES.map {|code, name| [code.to_s.camelcase, code] }
  
  -booking_details = @service.booking_details || {}
  
  -# RIDEPILOT
  .booking-inputs.ride_pilot-booking.hidden
    =f.fields_for :booking_details do |bd|
      =bd.input :provider_id, as: :integer, label: "RidePilot Provider ID", input_html: {value: booking_details[:provider_id]}


  -# ECOLANE
  .booking-inputs.ecolane-booking.hidden
    =f.fields_for :booking_details do |bd|
      =bd.input :external_id, as: :string, label: "Ecolane ID", input_html: {value: booking_details[:external_id]}
      =bd.input :token, as: :string, label: "Token", input_html: {value: booking_details[:token]}
      =bd.input :home_counties, as: :string, label: "Home Counties", input_html: {value: booking_details[:home_counties]}
      =bd.input :ada_funding_sources, as: :string, placeholder: "ADA, ADAParatransit", label: "ADA Funding Sources", input_html: {value: booking_details[:ada_funding_sources]}
      =bd.input :min_days, as: :integer, label: "Min Booking Notice (days)", input_html: {value: booking_details[:min_days]}
      =bd.input :max_days, as: :integer, label: "Max Booking Notice (days)", input_html: {value: booking_details[:max_days]}
      =bd.input :require_selfservice_validation, collection: [false, true], include_blank: false, label: "Require Self Service Validation", selected: (booking_details[:require_selfservice_validation])

  -# TRAPEZE
  .booking-inputs.trapeze-booking.hidden
    =f.fields_for :booking_details do |bd|
      =bd.input :trapeze_provider_id, as: :integer, label: "Trapeze Provider ID", input_html: {value: booking_details[:trapeze_provider_id]}

:javascript
  $(document).ready(function() {

    // Create a FormHandler to handle submit and cancel events
    var fh = new FormHandler($('#{form_selector_from_id}'));
    
    // Handle toggling between different booking apis:
    var bookingApiInput = $('.booking-api');

    // Show appropriate booking details inputs and hide all others
    var showBookingInputs = function() {
      var bookingApi = bookingApiInput.val();
      $('.booking-inputs').addClass('hidden');
      $('.booking-inputs.' + bookingApi + '-booking').removeClass('hidden');
    };
    showBookingInputs(); // On page load, show proper booking inputs
    bookingApiInput.change(showBookingInputs); // Show correct booking inputs when a new api is selected.

    // Form reset callback
    fh.onReset(function() {
      showBookingInputs(); // Show correct booking inputs when form is reset
    });

  });
