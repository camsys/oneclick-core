=content_for :header do
  ="Create New Alert"

-audience_details = @new_alert.audience_details || {}

-I18n.available_locales.each do |locale|
  %h3.text-center
    =locale
  = f.input "#{locale}_subject", label:"Subject", :as => :string, input_html: {value: ""}, placeholder: "#{locale} Subject"
  = f.input "#{locale}_message", label:"Message", :as => :text, input_html: {value: ""}, placeholder: "#{locale} Message"

%hr
=f.input :expiration, required: false,
  input_html: {class: 'datepicker'}, 
  as: :string, label: "Expires"
= f.input :published, as: :radio_buttons, label: "Publish Now"
= f.input :audience, input_html: {id: 'audience-type'}, include_blank: false, collection: Alert::AUDIENCE_TYPES.map {|a_t| [a_t.to_s.titleize, a_t]}

.audience-inputs.specific_users.hidden
  =f.fields_for :audience_details do |ad|
    =ad.input :user_emails, as: :text, input_html: {value: audience_details[:user_emails]}, placeholder: "emails of users separated by commas"


:javascript
  // Handle toggling between different audience types:
  var audienceTypeInput = $('#audience-type'); // JQuery reference to fare structure selector element
  // Show appropriate fare inputs and hide all others
  var showAudienceInputs = function() {
    var audienceType = audienceTypeInput.val();
    $('.audience-inputs').addClass('hidden');
    $('.audience-inputs.' + audienceType).removeClass('hidden');
  };
  showAudienceInputs(); // On page load, show proper audience inputs
  audienceTypeInput.change(showAudienceInputs); // Show correct audience inputs when a new structure is selected.
