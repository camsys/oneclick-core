= f.input :email, required: true, :as => :string
= f.input :first_name, required: false, :as => :string
= f.input :last_name, required: false, :as => :string
= f.input :password, required: true, :as => :password
= f.input :password_confirmation, required: true, :as => :password

-# If the current user can manage roles, is admin/ superuser, and the current user has more than one role
  then display the role management form
  - the staff locals is true if we're creating or editing a staff user
-if (can? :manage, Role) && (current_user.admin? || current_user.superuser?) && staff == true
  %hr
  %h4.text-center Roles
  = f.input :roles,
    label: "User Role",
    selected: @user.roles.last.try(:name),
    collection: RoleHelper::PERMISSIBLE_CREATES[current_user.roles_name.last.to_sym],
    readonly: @user.valid? && (@user == current_user || (cannot? :update, @user))
  - if current_user.superuser? || (current_user.currently_oversight? && current_user.oversight_admin?)
    = f.input :staff_agency,
        as: :select,
        collection: current_user.accessible_agencies,
        label: "Staff for: ",
        include_blank: "Select an Agency"
  - if current_user.transportation_admin?
    = f.input :staff_agency,
        as: :select,
        collection: current_user.accessible_agencies,
        selected: @user.staff_agency.try(:id),
        readonly: true,
        include_blank: false
  - if current_user.oversight_admin? && current_user.currently_transportation?
    = f.input :staff_agency,
        as: :select,
        collection: [current_user.current_agency],
        selected: @user.current_agency.try(:id),
        readonly: true,
        include_blank: false
