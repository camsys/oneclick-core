-# NOTE: The local_assigns[:action] locals needs to exist so that we can set form inputs to readonly
  properly. Otherwise if @user.nil? == true, like in user creation, then the form locks up which
  is not desired
- can_update_user = (can? :update, @user)
- readonly_field = local_assigns[:action] == 'create' ? true : can_update_user
= f.input :email,
  required: true,
  :as => :string,
  readonly: !readonly_field
= f.input :first_name,
  required: false,
  :as => :string,
  readonly: !readonly_field
= f.input :last_name,
  required: false,
  :as => :string,
  readonly: !readonly_field
= f.input :password,
  required: true,
  :as => :password,
  readonly: !readonly_field
= f.input :password_confirmation,
  required: true,
  :as => :password,
  readonly: !readonly_field

-# If the current user can manage roles, is admin/ superuser, and the current user has more than one role
  then display the role management form
  - the staff locals is true if we're creating or editing a staff user
-if staff == true
  %hr
  %h4.text-center Roles
  = f.input :roles,
    label: "User Role",
    required: true,
    prompt: '',
    selected: @user.valid? ? @user.roles.last.name.to_s : :staff,
    collection: RoleHelper::PERMISSIBLE_CREATES[current_user.roles.last.name.to_sym],
    readonly: @user.valid? && (@user == current_user || !readonly_field)
  = f.input :staff_agency,
      as: :select,
      collection: current_user.showable_agencies.order(:name),
      label: "Staff for: ",
      selected: @user.staff_agency&.id || current_user.current_agency&.id || current_user.staff_agency&.id,
      include_blank: "Select an Agency",
      readonly: @user.id == current_user.id  || !(current_user.superuser? || (current_user.oversight_admin? && current_user.currently_oversight?))

:javascript
  $(document).ready(function() {
  const NAText = 'Not Applicable'
  const SelectAgencyText = 'Select An Agency'
  const staffRoleInput = $('#user_roles')
  const staffAgencyInput = $('#user_staff_agency')
  // If the current @user is a superuser, then set the agency input to readonly, and set the blank option to have
  // "Not Applicable" as the text
    if (staffRoleInput.length > 0) {
      if (staffRoleInput.val() === 'superuser') {
        staffAgencyInput.attr('readonly', 'readonly')
        const emptyOption = $('#user_staff_agency option[value=""]')
        emptyOption.text(NAText)
      }

      // On role input change, if the selected role is superuser,
      // ...set it to readonly and set the blank option to have text of "Not Applicable"
      // else
      // ... remove the readonly attribute and set the blank option to have text of "Select an Agency"

      staffRoleInput.change(function({target,...event}) {
        const roleSelected = target.value
        const emptyOption = $('#user_staff_agency option[value=""]')
        if (roleSelected === 'superuser') {
          staffAgencyInput.val('')
          staffAgencyInput.attr('readonly', 'readonly')
          emptyOption.text(NAText)
        } else if (staffAgencyInput.attr('readonly')) {
          staffAgencyInput.removeAttr('readonly')
          emptyOption.text(SelectAgencyText)
        }
      })
    }
  });