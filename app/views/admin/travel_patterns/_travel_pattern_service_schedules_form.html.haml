-#:css



-# For use in building new schedule forms
-mode = local_assigns[:mode]
-form_id = local_assigns[:form_id]
-f = local_assigns[:f]
-can_update = (mode == 'view' ? false : (can? :update, @travel_pattern))

.service-schedules-container
  .form-group.string.optional.schedule-label-container
    .col-sm-12
      %label.control-label.text.optional
        Service Schedules (Prioritized Order):
  .well.well-sm.schedule-container
    =f.simple_fields_for :travel_pattern_service_schedules, @travel_pattern.travel_pattern_service_schedules.build do |s|
      - @travel_pattern.travel_pattern_service_schedules.each do |ss|
        = render partial: "add_travel_pattern_service_schedule", locals: {s: s, ss: ss, can_update: can_update}

      :javascript
        function add_schedule_input(input) {
          make_input_readonly(input);

          $(".well.schedule-container").append('#{escape_javascript render partial: "add_travel_pattern_service_schedule", locals: {s: s, can_update: can_update}}');

          var input_index = parseInt(input.attr("id").match(/\d+/)) + 1;
          increment_input_index($(".add-schedule input").last(), input_index);

          schedule_input_listener();
        }

        function schedule_input_listener() {
          $(".add-schedule input").off("change");
          $(".add-schedule input").on("change", function() {
            add_schedule_input($(this));
          });
        }

        function make_input_readonly(input) {
          input.attr("readonly", true);
          $(input).closest(".schedule-group").prepend('<div class="delete-schedule pull-right btn btn-link schedule-container"><span class="glyphicon glyphicon-remove"></span></div>');
        }

        function increment_input_index(input, new_index) {
          $(input).attr("id", $(input).attr("id").replace(/0/g, new_index));
          $(input).attr("name", $(input).attr("name").replace(/0/g, new_index));
        }

        $(document).ready(function() {
          schedule_input_listener();
          var input_index = 0;
          $(".add-schedule input").each(function() {
            if ($(this).val()) {
              make_input_readonly($(this));
            }
            increment_input_index($(this), input_index);
            input_index++;
          });
        });

:javascript
  $(document).ready(function() {
    var fh = new FormHandler($('#{form_id}'));

    // Have the FormHandler watch the form for changes, plus trigger change events
    fh.watch($('.form-container'));

    // Reset the schedule divs on form reset
    // fh.onReset(function() {
    //
    // });
  });