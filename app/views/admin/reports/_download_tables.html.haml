=content_for :header do
  Download Report Tables

=simple_form_for :download_table,
  url: download_table_admin_reports_path,
  html: {class: 'form-horizontal', id: form_id_from_path, multipart: true },
  authenticity_token: true do |f|
  
  =f.input :table_name, required: true, 
    collection: @download_tables, 
    label: "Select Report Type"
  
  .table-download-options.users.hidden
    =render partial: 'users_table_download_options', locals: {f: f}
  
  .table-download-options.trips.hidden
    =render partial: 'trips_table_download_options', locals: {f: f}

  .table-download-options.services.hidden
    =render partial: 'services_table_download_options', locals: {f: f}
    
  .table-download-options.requests.hidden
    =render partial: 'requests_table_download_options', locals: {f: f}

  .table-download-options.feedback.hidden
    =render partial: 'feedback_table_download_options', locals: {f: f}

  .table-download-options.feedback-aggregated.hidden
    =render partial: 'feedback_table_download_options', locals: {f: f}

  .table-download-options.find-services.hidden
    =render partial: 'find_services_download_options', locals: {f: f}

=content_for :footer do
  .btn.btn-primary.download-table-form-submit Download Table File

  -# Flash message for "Please wait..."
  .flash-message.alert.alert-info.mt-3{style: "display: none;", role: "alert"}
    %strong Please wait...
    | The report is being generated.

:javascript
  $(document).ready(function() {
    $('.download-table-form-submit').click(function(e) {
      e.preventDefault();  // Prevent the default form submission

      // Show the initial "Downloading..." flash message
      $('.flash-message').text('Downloading...').show();

      // Create an invisible iframe to handle the download
      var iframe = $('<iframe/>', { style: 'display:none' }).appendTo('body');

      // Listen for the iframe to finish loading the download request
      iframe.on('load', function() {
        // Check if the iframe content includes the 'X-Download-Complete' header
        var iframeDoc = iframe[0].contentDocument || iframe[0].contentWindow.document;

        // Since we can't access headers directly from iframe due to cross-origin policy, we can check for the presence of text indicating the download is complete
        if (iframeDoc.body && iframeDoc.body.innerText.includes('X-Download-Complete')) {
          // Update flash message to "Download Complete"
          $('.flash-message').text('Download Complete!');
          // Optionally hide the message after a delay
          setTimeout(function() {
            $('.flash-message').fadeOut();
          }, 5000);  // Adjust the delay as needed
        }
      });

      // Set iframe's source to initiate the download
      iframe.attr('src', $('form#form-download-tables').attr('action') + "?" + $('form#form-download-tables').serialize());

      // Allow form submission to continue after showing the flash
      setTimeout(function() {
        $('form#form-download-tables').submit();
      }, 100);  // Adjust the delay as needed
    });
  });


